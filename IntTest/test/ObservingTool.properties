# $Id: ObservingTool.properties,v 1.2 2009/09/22 22:40:17 rhiriart Exp $


### Where to find an Acs Manager
### ----------------------------------------------------
###
### Example
###    ACS.managerhost=host.example.com
###    ACS.baseport=0
###
ACS.managerhost=localhost
ACS.baseport=0




### Points to the Archive config file
### ---------------------------------------------------------------
### When archive runs on a native Acs, it can fallback to a config file under acsdata.
### When archive runs in a pure-java environment, this property needs to be set explicitly.
###
### Options:
###   defaultDBConfig.xml - use the built-in config file that's in one of archive's jars
###   <resource name>     - tries to use that config file; if invalid, falls back to acsdata
###
### Example:
###    archive.config.file=defaultDBconfig.xml
###
archive.config.file=defaultDBconfig.xml



### python.ot.libs
### ---------------------------------------------------------------
###   A colon-separated list of Python library files to be loaded
###   into the ObservingTool. Those files should contain only
###   definitions, and no directly executable code. Such
###   definitions will then be available to all application
###   scripts within the Python scripting environment.
###
###   Note: these files will be loaded via the class loader.
###         It should only include Python module that cannot
###         be loaded from python.path (see below) using the
###         standard "import" mechanism: for instance for 
###         Java Web Start distributions.
### 
### Example:
###     python.ot.libs=dir1/lib1.py:dir2/subdir/lib2.py
python.ot.libs=config/python/ot.py:config/python/ScriptValidator.py:config/python/ControlScript.py



### python.path
### ---------------------------------------------------------------
###    This is where the Python scripting environment will look for
###    Python "import" modules. It must be a list of directory names
###    separated by a vertical bar character ("|"); relative pathnames
###    are resolved relative to the startup directory (that is,
###    .../ObservingTool/).
###    Example:
###       python.path=alma/obsprep/ot/scripting|lib/python
###
###    Note that modules loaded from this directory will override any
###    definitions contained in the libraries loaded via 
###    property python.ot.libs (above).
###
###    For more info, see the tutorial on http://www.python.org
###
python.path=config/python



### otData.dir
### ---------------------------------------------------------------
###    Moved here from ALMA-OT script (was defined on the command line).
###	 Example:
###     otData.dir=config/otData
###
otData.dir=config/otData

# Prototype mapper parameters
NUMBER_OF_ANTENNAS=64
NOMINAL_SB_LENGTH=30

### telescope
# Which telescope to set  up for. Values are ATF or ALMA
Telescope=ALMA

### Project migration data: url for location of xslt scripts, current OT version and supported versions (i.e. 
### those with close enough schema to load successfully without migration)
ConverterBaseUrl=http://www.roe.ac.uk/ukatc/projects/alma/ConversionScripts/
OTDataModelVersion=9
SupportedDataModelVersions=9

### Specify the xml transform impl to use: an ACS library somewhere sets this to
### org.apache.xalan.processor.TransformerFactoryImpl which gives us problems.
javax.xml.transform.TransformerFactory=com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl
