/*
 * DDL for the User Registry database -- HSQLDB version
 * Author: amchavan, ESO, 17-Feb-2010
 */
 
 /* $Id: userreg-hsqldb-ddl.sql,v 1.3 2012/08/15 20:41:47 javarias Exp $ */ 

-- Ordering of 'drop table' statements is important!

drop table account_role if exists;
drop table account if exists;
drop table role if exists;
drop table institution if exists;
drop table country if exists;
drop table SUBMISSION_SERVICE_ROLES if exists;
drop sequence hibernate_sequence if exists;
drop sequence inst_seq if exists;

create table country ( 
    country_id    	bigint generated by default as identity (start with 1)  not null,
    version	   		bigint,
    country_name 	varchar(256) not null, 
    executive      	varchar(32)  not null
);

alter table country add constraint country_pk primary key (country_id);
alter table country add constraint unique_country_name unique(country_name);


create table institution ( 
    inst_no    		bigint,
    version	   		bigint null,
    sibling_no 		bigint, 
    name1      		varchar(2048)  	not null,
    name2      		varchar(2048),
    name3      		varchar(2048),
    altNames   		varchar(2048),
    city       		varchar(2048)     /*not null*/,
    postcode   		varchar(2048),
    address1     	varchar(2048),
    address2     	varchar(2048),
    address3     	varchar(2048),
    executive  		varchar(2048)    not null,
    /* country    	varchar(2048)    not null, */
    country_id 		bigint     		,
    state      		varchar(2048),
    email      		varchar(2048),
    url        		varchar(2048),
    phone      		varchar(2048),
    fax        		varchar(2048),
    recorder   		varchar(2048),
    superseding_no 	bigint,
    user_defined    varchar(1) default 'F',
    ignored 		varchar(1) default 'F',
);

alter table institution add constraint institution_pk primary key (inst_no);
alter table institution add constraint name_unique unique(name1, name2, name3, country_id, state);
alter table institution add constraint fk_sibling foreign key (sibling_no) references institution (inst_no);
alter table institution add constraint fk_country foreign key (country_id) references country (country_id);

create table account ( 
    account_id				varchar(32)		not null,	-- username
    version 				bigint 			not null,
    request_handler_id      bigint			,
	password_digest  		varchar(2048)	,	
	firstName   			varchar(2048)	not null,	
    lastName      			varchar(2048)	not null,
    initials      			varchar(256) 	not null,
    creationTimestamp 		timestamp		, 
    modificationTimestamp 	timestamp		,
    preferredArc   			varchar(32) 	,
    email     				varchar(512) 	,
    executive  				varchar(5)		not null,
    aliases					varchar(256)	,
    inst_no    				bigint		not null
);

alter table account add constraint account_pk primary key (account_id);
alter table account add constraint email_unique unique(email);
alter table account add constraint fk_account_inst foreign key (inst_no) references institution (inst_no);

create table role ( 
    role_no			bigint generated by default as identity (start with 1)  not null,
    version 		bigint 			not null,
	application   	varchar(2048)	not null,
    name      		varchar(2048)	not null,
    parent_role  	bigint
);

alter table role add constraint role_pk primary key (role_no);
alter table role add constraint role_name_unique unique(application, name);
alter table role add constraint fk_parent_role foreign key (parent_role) references role (role_no);

create table account_role ( 
    role_no			bigint not null, 
	account_id		varchar(32) not null
);

alter table account_role add constraint fk_role foreign key (role_no) references role (role_no);
alter table account_role add constraint fk_account foreign key (account_id) references account (account_id);

create table trusted_accounts(
  id                    bigint          generated by default as identity (start with 1)  not null,
  alma_account_id       varchar(32) not null,
  trusted_account_id    varchar(32) not null,
  trusted_institution   varchar(10)     not null
);

alter table trusted_accounts add constraint id_pk primary key (id);
alter table trusted_accounts add constraint fk_account_id foreign key
    (alma_account_id) references account (account_id);
alter table trusted_accounts add constraint trusted_unique unique(alma_account_id, trusted_account_id, trusted_institution);
alter table trusted_accounts add constraint trusted_inst_enum CHECK (trusted_institution IN ('NRAO', 'NAOJ', 'ESO'));

create sequence inst_seq start with 32800;
create sequence hibernate_sequence;

create table SUBMISSION_SERVICE_ROLES (
		account_id			varchar(32)		not null,
		name				varchar(32)		not null
);
alter table SUBMISSION_SERVICE_ROLES add constraint SUBMISSION_SERVICE_ROLES_pk primary key (account_id, name);

insert into country (version, country_name, executive) values (1, 'United Kingdom', 'eu');

insert into institution (inst_no, name1, executive) values (1, 'Abbey Road', 'eu')

insert into account (account_id, version, password_digest, firstName, lastName, initials, email, executive, inst_no) 
	values ('john', 1, '527bd5b5d689e2c32ae974c6229ff785', 'John', 'Lennon', 'JL', 'john@thebeatles.com','eu', 1);

insert into SUBMISSION_SERVICE_ROLES values ('john', 'USER');

commit;
