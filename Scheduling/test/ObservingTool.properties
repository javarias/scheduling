# $Id: ObservingTool.properties,v 1.1 2004/09/30 20:12:43 sroberts Exp $


### Describes Acs
### (see property ServiceProvider for more information)
### ----------------------------------------------------
###
### Used for two slightly different use cases:
###
### A) Where to find an external Acs
###    ACS.host=host.example.com
###    ACS.instance=0
###
### B) Where to start an in-process Acs
###    ACS.host=localhost [will be ignored]
###    ACS.instance=0
###
ACS.host=localhost
ACS.instance=0

### Points to the database file system structures
### - required for a successful start of the in-process Archive -
### (see property ServiceProvider for more information)
### ----------------------------------------------------------
###
### Example:
###    alma.MicroArchive.DbDir=${user.home}/MicroArchive
###    alma.MicroArchive.DbDir=/alma/ACS-3.0/acsdata/config/MicroArchive
###
# alma.MicroArchive.DbDir=${user.home}/MicroArchive
# alma.MicroArchive.DbDir=y:/Acs-3.0.1-BinaryInstallation/acsdata/config/MicroArchive
alma.MicroArchive.DbDir=/export/home/midnight/sohaila/alma/ACS-3.1/acsdata/config/MicroArchive


### Points to the Archive config file
### - required for a successful start of the in-process Archive -
### (see property ServiceProvider for more information)
### ---------------------------------------------------------------
### When archive runs on a native Acs, it can fallback to a config file under acsdata.
### When archive runs in a pure-java environment, this property needs to be set explicitly.
###
### Options:
###   defaultDBConfig.xml - use the built-in config file that's in one of archive's jars
###   <resource name>     - tries to use that config file; if invalid, falls back to acsdata
###
### Example:
###    archive.config.file=defaultDBconfig.xml
###
archive.config.file=defaultDBconfig.xml


### Required for a successful start of the in-process Cdb
### (see property ServiceProvider for more information)
### ------------------------------------------------------
### 
### Example:
###    otCDB.dir=${user.home}
###    otCDB.dir=config/ObservingToolCDB
###
#otCDB.dir=${user.home}
#otCDB.dir=/home/mschilli/temp/obscdb
otCDB.dir=config/ObservingToolCDB



### Determines how Acs is dealt with
### ---------------------------------
### Options:
###   offline - a mockup of Acs is used to run the frontend for development/testing
###   start   - starts Cdb, Manager, and Container within OT's virtual machine
###   <else>  - relies on an external Acs
###
### Example:
###    ServiceProvider=offline
###
ServiceProvider=normal


### Points to the schemas the Archive needs to be initialized with
### ---------------------------------------------------------------
### Options:
###   <directory> - the schemas found in this directory will be loaded into the Archive
###   <nothing>   - nothing happens, the Archive remains unchanged
###
### Example:
###    alma.archive.namespaceDir=/alma/ACS-3.0/ACSSW/idl
###
#alma.archive.namespaceDir=y:/ACSSW-3.0.1_ICD-2004.01_Paola/idl
#alma.archive.namespaceDir=/alma/ACS-3.0/ACSSW/idl
#alma.archive.namespaceDir=/home/mschilli/esodev/OBSPREP/ProjectRepository/test/tempidl
alma.archive.namespaceDir=

# python.ot.libs
#   A colon-separated list of Python library files to be loaded
#   into the ObservingTool. Those files should contain only
#   definitions, and no directly executable code. Such
#   definitions will then be available to application
#   scripts within the Python scripting environment.
#   Example:
#     python.ot.libs=dir1/lib1.py:dir2/subdir/lib2.py
python.ot.libs=alma/obsprep/ot/scripting/ot.py


# python.path
#    This is where the Python scripting environment will look for
#    Python "import" modules. It should be a list of colon-separated
#    directory names; relative pathnames are resolved relative to the
#    startup directory (that is, .../ObservingTool/).
#    Example:
#       python.path=src/alma/obsprep/scripting:lib/python
#
#    Note that modules loaded from this directory override any
#    definitions contained in the libraries loaded via 
#    property python.ot.libs (above).
#
#    For more info, see the tutorial on http://www.python.org
#
#python.path=src/alma/obsprep/scripting:lib/python/site-packages


### otData.dir
#
#    Moved here from ALMA-OT script (was defined on the command line).
#	 Example:
#     otData.dir=config/otData
#
otData.dir=config/otData

### java.util.logging.config.class
#
# Optional property: configures the OT logging facility.
# Can be commented out but should not be changed, unless you 
# know what you are doing.
java.util.logging.config.class=alma.hla.runtime.obsprep.util.Log

# Prototype mapper parameters
NUMBER_OF_ANTENNAS=64
NOMINAL_SB_LENGTH=30
