<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="alma.scheduling.datamodel.obsproject">
    
    <typedef class="alma.scheduling.datamodel.StringEnumUserType" name="ArrayType">
        <param name="enumClassName">alma.scheduling.datamodel.obsproject.ArrayType</param>
    </typedef>
    <typedef class="alma.scheduling.datamodel.StringEnumUserType" name="SchedBlockState">
        <param name="enumClassName">alma.scheduling.datamodel.obsproject.SchedBlockState</param>
    </typedef>
    
    <class name="ObsUnit" table="OBSUNIT">
    <cache usage="read-write" include="all" region="alma.scheduling.datamodel.obsproject.ObsUnit"/>
        <id name="id" column="OBSUNITID">            
            <generator class="native"/>
        </id>
        <property name="uid" column="OBSUNIT_UID"/>
        <many-to-one name="parent" column="PARENTID" class="ObsUnitSet"/>
        <property name="projectUid" type="string" column="OBSUNIT_PROJECT_UID"/>
<!--    <one-to-one name="project" class="ObsProject" property-ref="obsUnit"/>  -->
        <component name="obsUnitControl" class="ObsUnitControl">
            <property name="lastUpdate" type="date" column="OBSUNIT_CTRL_LAST_UPDATE"/>
            <property name="validUntil" type="date" column="OBSUNIT_CTRL_VALID_UNTIL"/>
            <property name="maximumTime" type="double" column="OBSUNIT_CTRL_MAX_TIME"/>
            <property name="estimatedExecutionTime" type="double" column="OBSUNIT_CTRL_EXEC_TIME"/>
            <property name="arrayRequested" type="ArrayType" column="OBSUNIT_CTRL_ARRAY_TYPE"/>
        </component>
        
        <joined-subclass name="SchedBlock" table="SCHEDBLOCK">
            <key column="SCHEDBLOCKID"/>
            <property name="name" column="NAME"/>
            <property name="piName" column="PINAME"/>
            <property name="scienceScore" column="SCIENCE_SCORE" />
        	<property name="scienceRank" column="SCIENCE_RANK"/>
       		<property name="letterGrade" type="ScienceGrade" column="SCIENCE_GRADE"/>
            <property name="runQuicklook" type="boolean" column="RUN_QUICKLOOK"/>
            <component name="weatherConstraints" class="WeatherConstraints">
                <property name="maxWindVelocity" type="double" column="MAX_WIND_VELOCITY"/>
                <property name="maxOpacity" type="double" column="MAX_OPACITY"/>
                <property name="minPhaseStability" type="double" column="MIN_PHASE_STABILITY"/>
                <property name="maxSeeing" type="double" column="MAX_SEEING"/>
            </component>
            <component name="preConditions" class="Preconditions">
                <property name="maxAllowedHourAngle" type="double" column="MAX_ALLOWED_HA"/>
                <property name="minAllowedHourAngle" type="double" column="MIN_ALLOWED_HA"/>
            </component>
            <component name="schedulingConstraints" class="SchedulingConstraints">
                <property name="maxAngularResolution" type="double" column="MAX_ANG_RESOLUTION"/>
                <property name="representativeFrequency" type="double" column="REPR_FREQ"/>
                <many-to-one name="representativeTarget" class="Target" column="REPR_TARGET"/>
            </component>
            <component name="weatherDependentVariables" class="WeatherDependentVariables">
                <property name="lastUpdate" type="date" column="WEATHER_VARS_LAST_UPDATE"/>
                <property name="validUntil" type="date" column="WEATHER_VARS_VALID_UNTIL"/>
                <property name="tsys" type="double" column="WEATHER_VARS_TSYS"/>
                <property name="projectedTsys" type="double" column="WEATHER_VARS_PROJ_TSYS"/>
                <property name="projectionTimeIncr" type="double" column="WEATHER_VARS_PROJ_DELTA_T"/>
            </component>
            <component name="schedBlockControl" class="SchedBlockControl">
                <property name="lastUpdate" type="date" column="SCHEDBLOCK_CTRL_LAST_UPDATE"/>
                <property name="validUntil" type="date" column="SCHEDBLOCK_CTRL_VALID_UNTIL"/>
                <property name="indefiniteRepeat" type="boolean" column="SCHEDBLOCK_CTRL_INDEFINITE"/>
                <property name="executionCount" type="int" column="SCHEDBLOCK_CTRL_EXEC_COUNT"/>
                <property name="state" type="SchedBlockState" column="SCHEDBLOCK_CTRL_STATE"/>
                <property name="achievedSensitivity" type="double" column="SCHEDBLOCK_CTRL_SENSITIVITY"/>
                <property name="accumulatedExecutionTime" type="double" column="SCHEDBLOCK_CTRL_ACCUM_TIME"/>
                <property name="sbMaximumTime" type="double" column="SCHEDBLOCK_CTRL_MAX_TIME" />
            </component>
            <set name="observingParameters" cascade="save-update, lock, delete, delete-orphan">
                <key column="SCHEDBLOCKID"/>
                <one-to-many class="ObservingParameters"/>
            </set>
            <set name="targets" cascade="save-update, lock, delete, delete-orphan">
                <key column="SCHEDBLOCKID"/>
                <one-to-many class="Target"/>
            </set>
            <many-to-one name="executive" column="EXECUTIVE_ID" not-null="false" />            
            <component name="statusEntity" class="alma.entity.xmlbinding.sbstatus.SBStatusEntityT">
                <property name="entityId" type="string" column="STATUS_ENTITY_ID" not-null="false"/>
                <property name="entityIdEncrypted" type="string" column="STATUS_ENTITY_ID_ENCRYPTED" not-null="false"/>
                <property name="entityTypeName" type="string" column="STATUS_ENTITY_TYPE_NAME" not-null="false"/>
                <property name="schemaVersion" type="string" column="STATUS_SCHEMA_VERSION" not-null="false"/>
                <property name="documentVersion" type="string" column="STATUS_DOCUMENT_VERSION" not-null="false"/>
                <property name="timestamp" type="string" column="STATUS_TIMESTAMP" not-null="false"/>
            </component>
        </joined-subclass>

        <joined-subclass name="ObsUnitSet" table="OBSUNITSET">
            <key column="OBSUNITSETID"/>
            <set name="obsUnits" inverse="true" cascade="save-update, lock, delete, delete-orphan">
                <key column="PARENTID"/>
                <one-to-many class="ObsUnit"/>
            </set>
            <component name="statusEntity" class="alma.entity.xmlbinding.ousstatus.OUSStatusEntityT">
                <property name="entityId" type="string" column="STATUS_ENTITY_ID" not-null="false"/>
                <property name="entityIdEncrypted" type="string" column="STATUS_ENTITY_ID_ENCRYPTED" not-null="false"/>
                <property name="entityTypeName" type="string" column="STATUS_ENTITY_TYPE_NAME" not-null="false"/>
                <property name="schemaVersion" type="string" column="STATUS_SCHEMA_VERSION" not-null="false"/>
                <property name="documentVersion" type="string" column="STATUS_DOCUMENT_VERSION" not-null="false"/>
                <property name="timestamp" type="string" column="STATUS_TIMESTAMP" not-null="false"/>
            </component>
        </joined-subclass>
        
    </class>
    
    <!-- Care must be taken because the rising time could be bigger than the setting time,
         which happens when the interval of observability crosses the 24 hr boundary. -->
    <query name="SchedBlock.findSchedBlocksWithVisibleRepresentativeTarget">
        <![CDATA[
        from SchedBlock sb where
       (sb.schedulingConstraints.representativeTarget.source.observability.risingTime <
        sb.schedulingConstraints.representativeTarget.source.observability.settingTime and
        sb.schedulingConstraints.representativeTarget.source.observability.risingTime < ? and
        sb.schedulingConstraints.representativeTarget.source.observability.settingTime > ?) or
       (sb.schedulingConstraints.representativeTarget.source.observability.risingTime >
        sb.schedulingConstraints.representativeTarget.source.observability.settingTime and
       (sb.schedulingConstraints.representativeTarget.source.observability.risingTime < ? or
        sb.schedulingConstraints.representativeTarget.source.observability.settingTime > ?))        
		]]>
    </query>
    
    <query name="SchedBlock.findSchedBlocksWithoutTooMuchTsysVariation">
        <![CDATA[
        from SchedBlock sb where
        ((sb.weatherDependentVariables.projectedTsys - sb.weatherDependentVariables.tsys)
         / sb.weatherDependentVariables.tsys) < ?
        ]]>
    </query>
    
    <query name="SchedBlock.findByEstimatedExecutionTime">
    	<![CDATA[
    		from SchedBlock sb where
    		sb.obsUnitControl.estimatedExecutionTime < ?
    	]]>
    </query>
    
    <query name="SchedBlock.findByTargetHourAngleLimits">
    	<![CDATA[
    		from SchedBlock sb where
    		sb.schedulingConstraints.representativeTarget.source.coordinates.RA >= ? and
    		sb.schedulingConstraints.representativeTarget.source.coordinates.RA <= ?
    	]]>
    </query>

</hibernate-mapping>
