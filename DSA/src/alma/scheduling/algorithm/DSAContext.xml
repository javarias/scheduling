<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-lazy-init="true" default-autowire="byName">
	
	<import resource="classpath:alma/scheduling/CommonContext.xml"/>

	<bean id="execSelector" class="alma.scheduling.algorithm.executive.ExecutiveSelector"
		scope="prototype">
		<constructor-arg>
			<value>execSelector</value>
		</constructor-arg>
		<property name="execDao" ref="execDao" />
		<property name="sbDao" ref="sbDao" />
	</bean>

	<bean id="sourceSelector"
		class="alma.scheduling.algorithm.obsproject.FieldSourceObservableSelector"
		scope="prototype">
		<constructor-arg>
			<value>sourceSelector</value>
		</constructor-arg>
		<property name="configDao" ref="configDao" />
		<property name="schedBlockDao" ref="sbDao" />
	</bean>

	<bean id="arrayConfigSelector"
		class="alma.scheduling.algorithm.observatory.ArrayConfigurationSelector"
		scope="prototype">
		<constructor-arg>
			<value>arrayConfigSelector</value>
		</constructor-arg>
		<property name="sbDao" ref="sbDao" />
	</bean>

	<bean id="hourAngleSelector" class="alma.scheduling.algorithm.obsproject.HourAngleSelector"
		scope="prototype">
		<constructor-arg>
			<value>hourAngleSelector</value>
		</constructor-arg>
		<property name="sbDao" ref="sbDao" />
	</bean>
	
	<bean id="moonAvoidanceSelector" class="alma.scheduling.algorithm.obsproject.MoonAvoidanceSelector"
                    scope="prototype">
        <constructor-arg><value>moonAvoidanceSelector</value></constructor-arg>
    	<property name="sbDao" ref="sbDao"/>		
    </bean>

	<bean id="sunAvoidanceSelector"
		class="alma.scheduling.algorithm.obsproject.SunAvoidanceSelector"
		scope="prototype">
		<constructor-arg>
			<value>sunAvoidanceSelector</value>
		</constructor-arg>
		<property name="sbDao" ref="sbDao" />
	</bean>

	<bean id="sbStatusSelector"
		class="alma.scheduling.algorithm.obsproject.SchedBlockStatusSelector"
		scope="prototype">
		<constructor-arg>
			<value>sbStatusSelector</value>
		</constructor-arg>
		<property name="sbDao" ref="sbDao" />
	</bean>

	<bean id="weatherSelector" class="alma.scheduling.algorithm.weather.WeatherFullSelector"
		scope="prototype">
		<constructor-arg>
			<value>weatherSelector</value>
		</constructor-arg>
		<property name="schedBlockDao" ref="sbDao" />
	</bean>

	<bean id="weatherUpdater" class="alma.scheduling.algorithm.weather.MemoryWeatherUpdater">
		<property name="dao" ref="atmDao" />
		<property name="selector" ref="weatherSelector" />
		<property name="weatherDao" ref="weatherStationDao" />
		<property name="configDao" ref="configDao" />
		<property name="projTimeIncr" value="0.5" />
	</bean>

	<bean id="sourceUpdater"
		class="alma.scheduling.algorithm.obsproject.FieldSourceObservabilityUpdater">
		<property name="configDao" ref="configDao" />
		<property name="sourceDao" ref="sourceDao" />
	</bean>
               
	
	
	<bean id="dsaResultsSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingResources">
			<list>
				<value>alma/scheduling/algorithm/sbranking/SBRank.hbm.xml</value>
				<value>alma/scheduling/algorithm/results/Result.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>-->
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>-->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.transaction.flush_before_completion">true</prop>
				<prop key="hibernate.transaction.auto_close_session">false</prop>
				<prop key="hibernate.max_fetch_depth">5</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
				<prop key="hibernate.jdbc.fetch_size">8</prop>
			</props>
		</property>
	</bean>
	
	<!-- The transaction manager -->
	<bean id="dsaResultsTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="dsaResultsSessionFactory"/>
	</bean>
	
	<!-- DAO Beans -->
	<bean id="DSAResultDAO" scope="singleton"
		class="alma.scheduling.algorithm.results.dao.ResultsDaoImpl">
		<property name="sessionFactory" ref="dsaResultsSessionFactory"/>
	</bean>
	
	
</beans>