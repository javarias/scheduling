<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Array-HEAD">
	<property environment="env"/>
	<property name="Common.location" value="../Common"/>
	<property name="Master.location" value="../Master"/>
	<property name="junit.output.dir" value="../junit"/>
	<property name="DSA.location" value="../DSA"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.6"/>
	<property name="source" value="1.6"/>
	<property name="instrumented.dir" value="instrumented"/>
	<property name="cobertura.dir" value="${env.COBERTURA_HOME}" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="bin"/>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="test">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin"/>
	</target>
	<target depends="clean" name="cleanall">
		<ant antfile="build.xml" dir="${Common.location}" inheritAll="false" target="clean"/>
		<ant antfile="build.xml" dir="${DSA.location}" inheritAll="false" target="clean"/>
	</target>
	<target depends="build-project" name="build"/>

	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="src"/>
		</javac>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="test"/>
		</javac>
	</target>

	<target name="instrument" depends="build">
		<delete file="cobertura.ser"/>
		<cobertura-instrument todir="${instrumented.dir}">
			<includeClasses regex=".*" />
			<excludeClasses regex=".*\.Test.*" />
			<excludeClasses regex=".*\.Tests.*" />
			<ignore regex="com.vladium.*" />
			<instrumentationClasspath>
				<pathelement location="bin" />
			</instrumentationClasspath>
		</cobertura-instrument>
	</target>

	<target name="test">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<sysproperty key="net.sourceforge.cobertura.datafile"
        		file="cobertura.ser" />
			<formatter type="xml" />
			<test name="alma.scheduling.array.executor.ExecutorUnitTests" todir="${junit.output.dir}" />
			<classpath>
				<pathelement path="${instrumented.dir}"/>
				<pathelement path="bin"/>
				<path refid="cobertura.classpath"/>
				<pathelement path="${classpath}"/>
			</classpath>
		</junit>
		<junit fork="yes" printsummary="withOutAndErr">
			<sysproperty key="net.sourceforge.cobertura.datafile"
        		file="cobertura.ser" />
			<formatter type="xml" />
			<test name="alma.scheduling.array.sbQueue.ReorderingBlockingQueueTest" todir="${junit.output.dir}" />
			<classpath>
				<pathelement path="${instrumented.dir}"/>
				<pathelement path="bin"/>
				<path refid="cobertura.classpath"/>
				<pathelement path="${classpath}"/>
			</classpath>
		</junit>
	</target>
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${junit.output.dir}"/>
		</junitreport>
	</target>
</project>
