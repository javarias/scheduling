RELEASE_NOTES

Module: SCHEDULING 

From: 
   David Clarke

Version: 

********************************************************************

Release 8.1
===========

Development Notes
~~~~~~~~~~~~~~~~~

 * Threads which previously were hanging around after a Destroy Array
   are now tidied up

 * The ICDs within the Scheduling subsystem have been slightly
   reorganised.

 * A lot of preparation work has been done towards the release of
   Dynamic Scheduling, though this is not yet available to the user.

 * We now have a prototype plugin which monitors (and controls) the
   activity of the Archive Poller, though this is not yet
   "productised" for use by end users.

User Notes
~~~~~~~~~~

From the users' perspective, the following changes have been made to
the Scheduling subsystem for R8.1:

 * The interaction between the Array plugin and the OMC's tabbing
   structure has been corrected.

 * A "Destroy Array" button has been added to each Array's
   plugin. This can be used to destroy the Array, having exactly the
   same effect as the Destroy Array entry on the Existing Arrays tab
   of the Create Array plugin. It is the recommended way to destroy an
   Array, and will gracefully terminate any SchedBlock executing on
   the Array, stop the execution queue of the Array, release resources
   associated with the Array and disable plugins for the Array.

 * The display of the status of a completed SchedBlock execution on
   the Array plugin is now much clearer - it is colour coded for
   success (green) or failure (red), and distinguishes between failure
   of execution of the SchedBlock's script, failure of archiving of
   the observation data and complete success of the execution.

 * A new panel has been added to the Array plugin in which details of
   the selected Project and SchedBlock are displayed.

 * Creation of extraneous Observing Sessions for a Manual scheduler
   has been corrected.

 * [AIV-6226] 7m antennas are properly shown as unavailable when they
   have been used in an array.


Release 8.0
===========

Development Notes
~~~~~~~~~~~~~~~~~

The Scheduling subsystem has undergone a major re-engineering since
R7.1. This includes:

 * The interface with the project and status databases has been
   reworked. There is now a persistent Scheduling Working Database
   (SWDB) which contains the Scheduler's view of the ObsProjects and
   SchedBlocks. The model in this is the same as used in the APRC
   simulator. A new component, the ArchiveUpdater, has been created
   which updates this database both efficiently and frequently
   (currently once per minute).

 * The MasterScheduler's role has been reduced from trying to do
   everything to being in charge of creation and destruction of
   arrays. The functionality for each Array is now implemented in the
   new Scheduling Array component (q.v.)

 * When an array is created, a corresponding Scheduler component is
   created (in addition to the Control component). For Array999, the
   components created are SCHEDULING/Array999 and
   CONTROL/Array999. The Scheduler component consists of three parts:

    * the selector, which selects SchedBlocks to observe;
    * the queue, which queues the selected SchedBlocks for execution;
    * the executor, which takes SchedBlocks from the queue and
      observes them

 * To control the Scheduling Array component, a new plug-in, the Array
   Panel, has been created. For pragmatic reasons the CreateArray
   plug-in has been carried over largely unchanged.

User Notes
~~~~~~~~~~

1. Scheduling Panel Changes

As well as major internal changes (q.v.), the Scheduling subsystem has
had its main operating panel replaced with a much more user-friendly
and focussed plug-in. See the user documentation for details.

2. SchedBlock Lifecycle for Commissioning

A new, simplified, SB lifecycle has been introduced for
commissioning. For how to create Projects which use this lifecycle,
see the Observation Preparation documentation.

SchedBlocks which are commissioning SchedBlocks (i.e. are part of an
ObsProject which has the CSV (aka Commissioning Mode) flag set), are
treated specially by the Scheduler. Such SchedBlocks start off in the
CSVReady state, move to CSVRunning while observing, and then move back
to CSVReady when each execution of the SchedBlock is finished. What
this means is that they will never fall off the Scheduler's radar as a
result of the Scheduler's actions. They can be moved to a state
CSVSuspended by the ProjectTracker, which will remove them from the
Scheduler's consideration.

3. Observing Sessions

Consecutive observations of the same SchedBlock on the same Array will
now form one QuickLook session. A QuickLook session is terminated by
either observing a different SchedBlock or destroying the Array. Note
that there is no timeout on a session.


Release 7.0
===========

Development Notes
~~~~~~~~~~~~~~~~~

The principal changes for R7 are associated with the Lifecycle FBT.
The states relevant to Scheduling are:

 * for SchedBlocks: Ready, Running and Suspended;

 * for Projects: Phase2Submitted, Ready, PartiallyObserved and
                 FullyObserved.

See the User Notes for the effects of all this.


User Notes
~~~~~~~~~~

1. Scheduling Panel Changes

1.1 The tables in each Scheduling Panel now resize with the panel,
    allowing more information to be shown. (COMP-3044, COMP-3544)

1.2 An extra flag has been added to each Scheduling Panel, controlling
    whether the Scheduler associated with the panel will operate in
    fully automatic or semi-automatic modes. See the description of
    the SchedBlock Lifecycle changes for details.

1.3 The Interactive Scheduling Panel now shows more information about
    the status of the selected SchedBlock and ObsProject, including a
    summary of the execution history of the SchedBlock.

1.4 Wildcard searching for Projects has been improved. For example, a
    search key of "D*" will find all Projects with a PI beginning with
    "D", while a search key of "*d" will find all projects with a PI
    ending with "d".

1.5 Errors in the updating of the Status column of the SBs Table have
    been corrected (COMP-2725).
    
1.6 The Scheduler Panels no longer come up blank, as they did in some
    circumstances (COMP-3330).

1.7 The antenna chessboards shown on the Scheduling Panels now use the
    correct positions for antennas (COMP-3103).


2. SchedBlock Lifecycle

2.1 Introduction

The principal change for R7.0 is the introduction of a project
lifecycle which is used throughout the ALMA software to help both
observatory staff and investigators to manage observing
projects. Schedulers now take note of the statuses of SchedBlocks and
the status of their enclosing Projects when searching the Project
Repository. Only SchedBlocks which are in one of the states Ready or
Running and which are within an ObsProject which is in one of the two
states Ready or PartiallyObserved will be found and shown as available
for execution.

Currently, SchedBlocks which have their Indefinite Repeat flag set are
considered to be AIV SchedBlocks. Future releases will refine this
definition.

To set the Indefinite Repeat flag for a SchedBlock, use the ALMA
Observing Tool (ALMA-OT): retrieve the containing ObsProject from the
archive, select the SchedBlock in the Project Structure pane, and
check the Indefinite Repeat checkbox in the SchedBlock section on the
Forms tab of the Editors pane, then write the project back to the
archive.

2.2 States of SchedBlocks

Once execution of a SchedBlock is started, its state is changed to
Running. When the execution ends, the state to which the SchedBlock is
moved depends on several factors. The main factor determining this is
whether the SchedBlock is considered to be an AIV SchedBlock or not:

2.2.1 Normal Usage (SchedBlock has a definite Execution Count)

      Once a SchedBlock execution ends, the SchedBlock will be marked
      as Suspended unless the execution ended normally AND there are
      more executions of the SchedBlock required (based on comparing
      the number of normally completed executions with the Execution
      Count specified for the SchedBlock) AND the Scheduler is running
      in FullAuto mode. If all of these conditions are met, then the
      SchedBlock will be marked as Ready. The semantics of the
      Suspended state for a SchedBlock are essentially "a human
      should look at the latest output of this SchedBlock". Use the
      ProjectTracker to move a SchedBlock on from the Suspended state
      - see the OBOBS documentation for what options are available and
      how to do this.

2.2.2 AIV Usage (SchedBlock is marked for Indefinite Repetition)

      Regardless of the completion state of a SchedBlock's execution,
      the SchedBlock's status will be set to Ready when an execution
      of that SchedBlock ends.

2.3 Execution Status

The Scheduling subsystem records the completion status for each
execution of a SchedBlock. The states used in the records of this are
as follows:

    SB completed normally          -> execution recorded as FullyObserved
    SB aborted                     -> execution recorded as PartiallyObserved
    otherwise, including SB failed -> execution recorded as Broken

Only executions recorded as FullyObserved are counted against the
Execution Count of the SchedBlock (as specified through the ALMA
Observing Tool).

These execution records are displayed in the Interactive Scheduling
Panel, and also in the Project Tracker (q.v.).

2.4 Book-keeping Information

The Scheduling subsystem now keeps track of the time spent observing
each SchedBlock, and of each ObsUnitSet. This information is tallied,
but time limits are not currently used to determine if a SchedBlock or
ObsUnitSet has finished. Such consideration will be added in future
releases.

2.5 ObsUnitSet and ObsProject Status

The status of an ObsUnitSet is related to the statuses of its
constituent SchedBlocks or ObsUnitSets (depending on which it has)
Also, the status of an ObsProject is related to the statuses of its
constituent ObsUnitSets. These relationships are quite complicated,
and users are referred to the OBOBS documentation for full
details. However, it should be noted that as SchedBlocks progress
through their lifecycle, the state of their containing ObsUnitSets and
ObsProject will be automatically updated accordingly.

2.6 A Little Bit Of Magic

When a Phase 2 Observing Project is submitted to the Archive via the
Observing Tool, its state is set to Phase2Submitted. In due course,
such projects will be reviewed by ALMA operations staff and marked by
them as Ready. However, this process is not currently in place. So, as
an interim measure, the Scheduling subsystem will search for Projects
which are Phase2Submitted and move them to Ready. This will be done
whenever Scheduling searches the Archive.

3. Manual Mode

Significant changes have been made to how manual mode projects are
defined and handled.

3.1 Manual Mode Projects

The ALMA software now supports multiple manual mode projects. Rather
than supporting a single project with its project name and PI name both
being "manual mode", any project can be marked as a manual mode
project.

To mark an ObsProject as manual mode, use the ALMA Observing Tool
(ALMA-OT): retrieve the ObsProject from the archive, select the
ObsProject in the Project Structure pane and open the Advanced Options
section on the Forms tab of the Editors pane, then check the Manual
Mode checkbox. Finally, write the project back to the archive.

3.2 Manual Scheduling

The Manual Scheduling Panel will display only Projects which are marked
as Manual Mode. Select the Project and SchedBlock you wish to execute
and proceed as normal. Any ASDM created as a result of this execution
will be associated with the selected SchedBlock.

4. Photonic References

The Create Array panel now shows a list of Central LO Photonic
References. Each array which is created may have 0 or 1 Photonic
Reference associated with it, this association is set when the array is
created. To do this, select the desired Photonic Reference on the
Create Array panel before pressing the Create button. This is analogous
to selecting the antennas for an array.

5. Miscellany

5.1 Inconsistencies in the display of array names have been removed
    (COMP-3428).

5.2 Handling of Projects with coordinates in non-supported coordinate
    systems has been made much more graceful (COMP-3260).

********************************************************************
Added to R4's branch:
- A few bugs were found when it was added to the upper left corner of the OMC. Those are now fixed
- When starting the OMC put:
    -DUseSchedulingPlugin=true
  in the JAVA_OPTIONS environment variable to see the SP in the OMC.
- Added better searching mechanicism in interactive scheduling. Seaching on PI and Project name can be done with words and * together. i.e: Sohaila* or Sohaila Lucero or *
- Once ALMA is operational in the OMC, right click on the scheduling panel and connect to the scheduling subsystem. 
>>>>>>> 1.19.2.2

********************************************************************
Release 4.0
- Based on ACS 5.0.5
- There is one alarm in the scheduling subsystem now called SchedArchiveConnAlarm.
It gets raised when an error is thrown while talking to the archive.
- The scheduling panel has had a few bug fixes. It will hopefully be in the OMC's upper left corner. If not run it as a plugin as mentioned below.
- Dynamic scheduling will ignore scheduling blocks that have an indefinite repeat count..


********************************************************************
Changes since the holography release

***** General *****
- Scheduling panel now must be run from the OMC as a plugin and the following must be added to the ExecConfig.xml file:
<property name="SubsystemPlugin1"  
    value="Scheduling Panel ,alma.scheduling.AlmaScheduling.GUI.SchedulingPanel.ExecFrameForPanel"/>

- There is also another plugin provided by scheduling, so please add the following to the ExecConfig.xml also.
<property name="SubsystemPlugin2"  
    value="Display All SBs ,alma.scheduling.AlmaScheduling.GUI.Plugins.DisplaySBPlugin"/>


********************************************************************
Release Notes for Holography Release: 2006/08/18

***** General *****
- DO NOT USE Scheduling Panel in OMC!!!!! 
- Use 'runSchedulingPanel' after the scheduling master component is operations. It will start the new interfaces of scheduling to the rest of the system. 
- Control still does not report back (sending an exec block end event) when there is an error in the scheduling blocks execution.
- A null pointer error from control is thrown when stop is called on an SB.
- In the Search text fields, just leave blank for now (yes this is a high priority to fix soon).
- Indefinite Repeating scheduling blocks are supported.
- Scheduling blocks with a repeat count > 0 are supported however once their repeat count is reached an exception might be thrown in Interactive & queued scheduling (another top priority bug which needs fixing!)

***** Queued Scheduling *****

- New Policy: scheduler does not look at repeat count and repeat the sb in the queue up til its repeat count. If you want to repeat it many times, you must add it to the queue that many times.
- When the scheduler is finished it tells control to destroy the array

***** Interactive Scheduling *****

- SB is run once when execute button clicked. to run it many times you must interactively execute it again once its finished.
- When the scheduler is finished it does not tell control to destroy the array
- When you search again, keep in mind that the next project you select will be run on the same array! To get a new array you must exit the interactive scheduler and create a new one.
- Using the OT through interactive scheduling is currently put on hold. To modify the project open the OT externally. However, the interactive session will not recognize the updates unless you re-open the session (yes this is a high priority, will be fixed soon).



***** Dynmic Scheduling *****
- Has not been tested with new scheduling panel.

---------------------------------------------------------------------------
OLD RELEASE NOTES BELOW: kept just coz.... not relevant

Important Comments:
    For MONTHLY-2005-09:
    - Due to the complexity of the control system this version of scheduling has not been fully tested. It has been tested with the version of control (plus a couple of bug fixes which hopefully made it into this month's release) from -08.

Configuration Requirements:
    - ACS-4.1.3
    - MicroArchive that was released with ACS
    - All other subsystems that are installed before scheduling in the build 
      process must be installed.
    - A full ALMA-CDB  must be present.
    
Scheduling's CDB requirements:
    * Components.xml
      <_ Name="SCHEDULING_MASTER_COMP"
            Code="alma.scheduling.AlmaScheduling.SchedulingMasterComponentHelper"
            Type="IDL:alma/ACS/MasterComponent:1.0"
            Container="java"/>

      <_ Name="SCHEDULING_MASTERSCHEDULER"
            Code="alma.scheduling.AlmaScheduling.MasterSchedulerIFHelper"
            Type="IDL:alma/scheduling/MasterSchedulerIF:1.0"
            Container="java" 
            Default="true" />

    * Plus an instance of the master component in the alma dir

Tested:
    - JUnit tests have been written for some of the classes. Alot of the 
      functionality cannot be tested as it is now without extreme interaction 
      with other ALMA subsystems. In the future scheduling simulators will be
      completed to avoid this interaction in testing.
  			  
    - Scheduling has been tested using entities created using the ALMA-OT batchmode.
      There is a Project.zip file in the src directory which has been modified to 
      contain a source which is *always* visible from the ATF location.


Tests: 
    - All the tests below run as a suite, AllTests.java
        AllTests include:
            TestAntenna
            TestDateTime
            TestStatus
            TestTime
    - There is a test simTest which tests the Planning Mode Simulator.
    - There is a test called pubTest which tests the NC Publisher for scheduling

TEST NOTE: Scheduling now has an Interactive Scheduling Mode. This requires human interaction
           and therefore cannot be automatically tested. For more imformation on how to test 
           the Interactive Scheduling mode please read the INTERACTIVE_SCHED_HOWTO in the src
           directory.
    
Known problems/bugs:

    - There was a problem in the time that CONTROL sent via the ExecBlockStarted event. 
      It should be fixed in cvs but just incase there are problems thats one thing that 
      could be the cause.

    - In interactive scheduling when the observing tool is used (when sb is 
      added or updated..) problems occur with the acs container. This due to 
      the way the OT shuts down or something.. 

    - The planning mode simulator gui does not create antenna config data so producing a file
      via the gui for a planning mode simulation will fail. Use the input.txt in test dir.
      
Changes:
    - There is a new schema SpecialSB. Which is an example of one type of a fixed scheduling
      block. With one of these stored in the archive, startScheduling will create a 
      scheduler for it. There is a script (storeSpecialSB) to put one in the archive.

    - If a SB has a repeat count, the scheduler now schedules the sb that many times. In
      the given Project.zip there is a repeat count of 5 so you should see 5 executions.
      The ProjectStatus.xml should have 5 sessions and 5 exec blocks.
    
    - New way of dealing/sending out session events. 
    
    - Scheduling of an ordered queue is implemented. Tho its really just scheduling of a list of SBs 

    - Interactive scheduling has a new look. same functionality tho. There's a HOWTO availble in src and on the scheduling twiki web.

    - Scheduling now receives (but doesn't do anything with) the TELCAL events. A log message is just sent out.
    

    Old:
    - Alot of fixes to the project status structure manipulation was done.
    - New functionality to talk to the Operator component from exec. To send a message that the a session has started and stopped.
    - Name changes for channel names and CDB stuff required by ITS
    - Now sending pipeline the PPR xml string in ProcessRequest
   	- PlanningModeSim and RealMode modules have been merged into one, Scheduling. 
    - Updated CDB
    

   New Structure
   
     - Scheduling now has one module. SCHEDULING/Scheduling
    
     
   New Features:
   
     - SchedulingMasterComponent exists, not sure if its implemented the way EXEC requires. 
     - Interactive Scheduling is up and running in a very elementary way.
     - ProjectStatus is now used
     - New entity, Session, has been implemented 
     - New Events, start session and end session, have been implemented.
        
     
   Fixed Problems:

     - ExecBlockEvent problem found in R1.1 integration has been corrected for
       future integrations

     - Problem with the StartSesion and EndSession events. Parameter was null, which corba 
       didn't like but didnt complain about.

